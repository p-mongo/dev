#!/bin/sh

# Server build instructions:
# https://github.com/mongodb/mongo/blob/master/docs/building.md
# https://github.com/mongodb/mongo/wiki/Build-Mongodb-From-Source
# https://jira.mongodb.org/browse/HELP-13886

set -e

# Dependencies:
#
# apt-get install gcc-8 g++-8 python3-pip libssl-dev libcurl4-openssl-dev \
#   libsnmp-dev libsasl2-dev libcurl4-gnutls-dev libldap2-dev libkrb5-dev

if ! test -d ~/apps/exp/mongo; then
  mkdir -p ~/apps/exp
  git clone https://github.com/mongodb/mongo ~/apps/exp/mongo
else
  (cd ~/apps/exp/mongo && git fetch origin)
fi
cd ~/apps/exp/mongo
rm -rf build

version="$1"
if test -z "$version" || test "$version" = master; then
  branch=origin/master
elif echo "$version" |grep -q ^r; then
  branch=$version
elif echo "$version" |grep -q 4.4; then
  branch=origin/v4.4
elif echo "$version" |grep -q 4.2; then
  branch=origin/v4.2
elif echo "$version" |grep -q 4.0; then
  branch=origin/v4.0
else
  #echo "Unknown version $version" 1>&2
  #exit 1
  branch=origin/$version
fi

if test -d ~/apps/exp/mongo-enterprise-modules; then
  (cd ~/apps/exp/mongo-enterprise-modules && git fetch origin)
else
  git clone git@github.com:10gen/mongo-enterprise-modules ~/apps/exp/mongo-enterprise-modules
fi

(cd ~/apps/exp/mongo-enterprise-modules &&
git checkout $branch)

git checkout $branch

# On 3.2 enterprise build requires ssl, but ssl requriements are too old.
if echo $version |egrep -q '^r?3.2'; then
  rm -rf src/mongo/db/modules/
else
  mkdir -p src/mongo/db/modules/
  ln -sf ~/apps/exp/mongo-enterprise-modules src/mongo/db/modules/enterprise
fi

if echo $version |egrep -q '^r?4.0'; then
  # https://jira.mongodb.org/browse/SERVER-49352
  if test -n "$VIRTUAL_ENV"; then
    if ! python -V 2>&1 |fgrep 'Python 2.7'; then
      echo "4.0 server requires python 2.7" 1>&2
      exit 1
    fi
    pip install -r buildscripts/requirements.txt
  else
    python2.7 -m pip install --user -r buildscripts/requirements.txt
  fi
elif echo $version |egrep -q '^r?4'; then
  pip3 install --user -r etc/pip/compile-requirements.txt
else
  :
fi

cpus=`grep ^cpu.cores /proc/cpuinfo |awk -F: '{print $2}' |head -1`
if test $cpus -gt 20; then
  jopt=-j20
else
  jopt=-j$cpus
fi

if echo $version |egrep -q '^r?4.4'; then
  targets="install-mongo install-mongod install-mongos install-mongocryptd"
else
  targets="mongo mongod mongos"
  if echo $version |egrep -q '^r?4.[24]'; then
    targets="$targets mongocryptd"
  fi
fi

# Linking each binary of the recent versions consumes gigabytes of ram.
# With -j4 all binaries end up getting linked at the same time.
# Build the binaries sequentially.
do_build() {
  for target in $targets; do
    nice "$@" $target
  done
}

# mongo mongobridge mongod mongos
# requires python2 on 4.0 and python3 on 4.2
if echo $version |egrep -q '^r?3.0'; then
  # Requires scons 2.3.
  # https://sourceforge.net/projects/scons/files/scons/2.3.6/
  # SSL does not build due to openssl incompatibility.
  do_build ~/.local/bin/scons --disable-warnings-as-errors $jopt
elif echo $version |egrep -q '^r?3.2'; then
  do_build ./buildscripts/scons.py --disable-warnings-as-errors $jopt
else
  do_build ./buildscripts/scons.py --disable-warnings-as-errors --ssl $jopt
fi

for i in $targets; do
  strip $i
done

subdir=`echo $branch |sed -e s/^v//`
if test $subdir = master; then
  subdir=4.4
fi

rsync -av ~/debs/mongo/$subdir/ ~/debs/mongo/$subdir-prev
rm -r ~/debs/mongo/$subdir/
mkdir ~/debs/mongo/$subdir/
cp mongo* ~/debs/mongo/$subdir/
